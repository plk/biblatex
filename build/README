Release procedure
=================

* Update main doc/latex/biblatex/RELEASE file
* Make sure doc has up to date release information at end
* Change biblatex.sty \blx@bcfversion if controlfile format is
  changed.  This is not done by build script automatically as the
  package version could change without the interface version
  changing. Don't forget that changing this needs matching change in
  Biber otherwise Biber will report a .bcf version mismatch.
* Change biblatex.sty \blx@bblversion if bbl format is changed.  This
  is not done by build script automatically as the package version
  could change without the interface version changing. Don't forget
  that changing this needs matching change in Biber otherwise biblatex
  will report a .bbl version mismatch.
* Tag with release tag
* Run build.sh in root dir to create release files.


Localization test procedure
===========================

The script `testlang.sh` can be used to test the localized strings of
biblatex. When it is executed it builds a temporary installation of
biblatex development code and processes all the examples against this
temporal installation using a particular language. The result is a big
pdf file that shows all the examples concatenated. You can then look
at the document to check for the correct usage of translated strings.

Say, for instance, that you want to check for catalan
localization. Then you should follow the next procedure:

* Set working directory to the root of the biblatex development tree.
* Run the script with the language name as a parameter. e.g.::
    build/testlang.sh catalan
* Check for errors during the process in file
  `build/test/example_catalan_errs_bibtex.txt`.
* Look at the result and analize the use of string translations in
  file `examples-catalan.pdf`.

